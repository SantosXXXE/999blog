import{_ as r}from"./chunks/freecompress.nEbc4BPw.js";import{_ as c,c as d,j as o,a as t,G as s,a2 as p,B as i,o as n}from"./chunks/framework.CqvaAnBq.js";const k=JSON.parse('{"title":"如何不失去分辨率的情况下压缩图像文件大小","description":"","frontmatter":{"lastUpdated":"2024-12-01T00:00:00.000Z"},"headers":[],"relativePath":"freecompress.md","filePath":"freecompress.md","lastUpdated":1733011200000}'),l={name:"freecompress.md"};function h(m,e,f,b,u,P){const a=i("ArticleMetadata");return n(),d("div",null,[e[0]||(e[0]=o("h1",{id:"如何不失去分辨率的情况下压缩图像文件大小",tabindex:"-1"},[t("如何不失去分辨率的情况下压缩图像文件大小 "),o("a",{class:"header-anchor",href:"#如何不失去分辨率的情况下压缩图像文件大小","aria-label":'Permalink to "如何不失去分辨率的情况下压缩图像文件大小"'},"​")],-1)),s(a),e[1]||(e[1]=p('<h3 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h3><div class="info custom-block github-alert"><p class="custom-block-title">INFO</p><p>最近在部署博客网站的时候遇到的一个棘手问题，有了DNS解析和CDN加速，虽然网站的速度上来了，但是往往首页图片还没加载出来。所以用于本文分享如何压缩图形和一些压缩原理</p></div><h2 id="关于压缩图像" tabindex="-1">关于压缩图像 <a class="header-anchor" href="#关于压缩图像" aria-label="Permalink to &quot;关于压缩图像&quot;">​</a></h2><p>本文要介绍的是<code>freecompress</code>这个在线免费压缩图像工具<br> 支持压缩优化 <code>JPEG</code>、<code>PNG</code>、<code>WebP</code>、<code>BMP</code> 图像<br><a href="https://freecompress.com/zh-cn/compress-image" target="_blank" rel="noreferrer">https://freecompress.com/zh-cn/compress-image</a></p><p>它可以在不降低质量的情况下缩小图像文件的大小，并可以选择压缩的级别（这里推荐30）。 通过减小图像文件的大小以显示在网络、论坛、博客中，用于以数字方式发送作业或通过电子邮件发送。 <img src="'+r+'" alt="图片" loading="lazy"></p><h2 id="什么是图像压缩" tabindex="-1">什么是图像压缩 <a class="header-anchor" href="#什么是图像压缩" aria-label="Permalink to &quot;什么是图像压缩&quot;">​</a></h2><p>图像压缩是一种通过删除一些不必要的内部数据而不丢失任何信息来减小图像文件大小的方法。</p><p>图像压缩可以是<code>有损</code>或<code>无损</code>的。</p><h2 id="图像压缩的类型" tabindex="-1">图像压缩的类型 <a class="header-anchor" href="#图像压缩的类型" aria-label="Permalink to &quot;图像压缩的类型&quot;">​</a></h2><p>图像压缩方法主要有两种——有损压缩和无损压缩。</p><p>什么是<code>有损压缩</code>和<code>无损压缩</code>？</p><h3 id="什么是有损压缩" tabindex="-1">什么是有损压缩？ <a class="header-anchor" href="#什么是有损压缩" aria-label="Permalink to &quot;什么是有损压缩？&quot;">​</a></h3><p><code>有损压缩</code>是一种压缩方法，通过删除一些图像的内部数据来减小文件的大小。</p><p>由于图像的某些数据在压缩过程中丢失，因此称为有损压缩。</p><p>丢失的数据是不可逆的，也就是说，如果我们解压缩文件，那么丢失的数据将无法恢复。</p><p>JPEG 图像文件使用<code>有损压缩</code>方法。</p><p>有损压缩方法中使用的算法是：</p><p><code>Transform coding [变换编码] </code><br><code>Discrete Cosine Transform [离散余弦变换] </code><br><code>Discrete Wavelet Transform [图像离散小波变换]</code><br><code>Fractal Compression [分形压缩]</code></p><h3 id="什么是无损压缩" tabindex="-1">什么是无损压缩？ <a class="header-anchor" href="#什么是无损压缩" aria-label="Permalink to &quot;什么是无损压缩？&quot;">​</a></h3><p><code>无损压缩</code>是一种通过限制图像的某些颜色或删除一些不再有用或不需要的内部数据来减小文件大小的压缩方法。</p><p><code>无损压缩</code>不会影响图像文件的质量。</p><p>压缩过程中删除的数据可以在我们解压缩文件时恢复。</p><p>这就是为什么这种压缩方法通常被称为可逆压缩的原因。</p><p>PNG 图像文件使用<code>无损压缩</code>方法。</p><p><code>无损压缩</code>方法中使用的算法是：</p><p><code>Run Length Encoding [游程编码]</code><br><code>Lempel-Ziv-Welch (or simply as LZW) [串表压缩算法]</code><br><code>Huffman Coding [哈夫曼编码]</code><br><code>Arithmetic Encoding [算术编码]</code></p><h2 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;">​</a></h2><p>你可以用<code>freecompress</code>压缩你的图像，通过减小图像文件的大小以显示在网络、论坛、博客中，用于以数字方式发送作业或通过电子邮件发送。</p><p><strong>如果你发现这篇指南有用，或者有改进建议，请随时联系我们或参与讨论。</strong>🎉 🎉 🎉</p>',29))])}const _=c(l,[["render",h]]);export{k as __pageData,_ as default};
