import{_ as a}from"./chunks/freecompress.nEbc4BPw.js";import{_ as c,c as r,j as o,a as t,G as p,a2 as n,B as P,o as l}from"./chunks/framework.CLwTfDY7.js";const u=JSON.parse('{"title":"如何不失去分辨率的情况下压缩图像文件大小","description":"","frontmatter":{"lastUpdated":"2024-12-02T00:00:00.000Z"},"headers":[],"relativePath":"jpgorpng.md","filePath":"jpgorpng.md","lastUpdated":1733097600000}'),i={name:"jpgorpng.md"};function s(G,e,h,b,g,N){const d=P("ArticleMetadata");return l(),r("div",null,[e[0]||(e[0]=o("h1",{id:"如何不失去分辨率的情况下压缩图像文件大小",tabindex:"-1"},[t("如何不失去分辨率的情况下压缩图像文件大小 "),o("a",{class:"header-anchor",href:"#如何不失去分辨率的情况下压缩图像文件大小","aria-label":'Permalink to "如何不失去分辨率的情况下压缩图像文件大小"'},"​")],-1)),p(d),e[1]||(e[1]=n('<h3 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h3><div class="info custom-block github-alert"><p class="custom-block-title">INFO</p><p>昨天写了如何压缩图像，突然想到很多人还不清楚jpg和png的区别，正好自己也复习分享一下</p></div><h2 id="无损与有损压缩" tabindex="-1">无损与有损压缩 <a class="header-anchor" href="#无损与有损压缩" aria-label="Permalink to &quot;无损与有损压缩&quot;">​</a></h2><p>JPG与PNG的主要讨论点之一是他们使用的压缩方法——特别是有损（JPG）和无损（PNG）压缩。<br> 有损压缩，顾名思义，涉及一定程度的数据丢失，这是<code>JPG</code>所做的。当你将图像保存为<code>JPG</code>时，算法会删除一些数据以减小文件大小。生成的图像是文件大小和画质之间的平衡。<br> 虽然这个过程可能会导致画质轻微减少，但人眼通常无法察觉。然而，在压缩过程中删除的任何数据都将永远消失，每次保存图像时都会发生这种情况。这意味着随着时间的推移，你编辑和/或保存图像的次数越多，你就越有可能注意到画质减少。<br> 另一方面，<code>PNG</code>使用无损压缩。在这种方法中，压缩过程中不会删除任何数据。相反，算法会找到有效的方法来表示相同的数据，从而在解压缩后产生与原始图像相同的图像。虽然这确保了高质量和细节的保存，但它通常会导致比<code>JPG</code>更大的文件大小。<br> 你在无损和有损压缩之间的选择最终将取决于对你来说最重要的是存储效率还是画质 <img src="'+a+'" alt="图片" loading="lazy"></p><h2 id="文件大小" tabindex="-1">文件大小 <a class="header-anchor" href="#文件大小" aria-label="Permalink to &quot;文件大小&quot;">​</a></h2><p>图像的大小确实会影响存储、加载时间和数据使用情况——尤其是在网站和移动应用程序上。<br> 虽然<code>JPG</code>以较小的文件大小而闻名，但一些图像数据在压缩过程中会丢失，这会随着时间的推移损害图像质量。也就是说，对质量的影响通常可以忽略不计。如果你优先考虑速度和效率，特别是对于快速加载时间至关重要的网络使用，<code>JPEG</code>的较小文件大小可能是你的最佳选择。<br> 另一方面，<code>PNG</code>由于其无损压缩方法而倾向于创建更大的文件。然而，这种质量保护是以更大的文件大小为代价的，这可能会在<code>Web</code>上加载得更慢。 图像的大小确实会影响存储、加载时间和数据使用情况——尤其是在网站和移动应用程序上。</p><h2 id="jpg与png打印" tabindex="-1">JPG与PNG打印 <a class="header-anchor" href="#jpg与png打印" aria-label="Permalink to &quot;JPG与PNG打印&quot;">​</a></h2><p>打印时，<code>PNG</code>和<code>JPEG</code>之间的选择取决于你的需求和可支配的资源。<code>png</code>的高分辨率图像提供卓越的颜色深度，可以在家用或工业打印机上提供高质量的打印。同时，有损压缩可能会使<code>JPG</code>照片在打印时变得模糊或失去颜色。 也就是说，<code>PNG</code>和<code>JPG</code>都不适合商业印刷任务，如海报和T恤。为什么？因为这些格式支持<code>RGB</code>颜色，但不支持<code>CMYK</code>，这是商业印刷行业的首选格式。 因此，如果你想在一大堆手提袋上打印你的设计，你可能需要考虑完全不同的文件类型。</p><h2 id="jpeg-jpg格式的主要优势" tabindex="-1">JPEG/JPG格式的主要优势 <a class="header-anchor" href="#jpeg-jpg格式的主要优势" aria-label="Permalink to &quot;JPEG/JPG格式的主要优势&quot;">​</a></h2><p><code>JPG（或JPEG）</code>格式在数字世界中是一种流行的（如果不是最流行的话）选择，原因很容易理解。这种图像格式带来了几个关键的好处：<br><code>效率</code>：<code>JPG</code>文件旨在有效压缩图像数据，这意味着它们在存储驱动器或网站上占用的空间更少。这对于那些存储空间有限或管理具有大量图像的网站的人来说非常有用。<br><code>速度</code>：更小的文件大小意味着更快的加载时间，<code>JPG</code>在不同的设备、网络和在线平台上下载和共享要快得多。同样，如果你管理一个网站，如果你的网站加载很快，你可能会在谷歌搜索结果中排名更高。即使它只快了几微秒，每一点都有帮助。<br><code>兼容性</code>：几乎所有现有的照片查看器、编辑工具和设备都支持JPG文件，使格式成为大多数应用程序的安全选择。 最小化后期制作：当照片以<code>JPG</code>格式拍摄时，通常需要较少的后期制作工作。像白平衡、对比度和锐化这样的方面通常已经调整得很好，为摄影师在编辑图像时节省了大量时间。</p><p>充分利用<code>JPG</code>的关键在于了解这些优势以及它们如何满足你的需求。通过这种理解，你可以确保你的图像针对你计划如何使用它们进行了优化。</p><h2 id="png格式的主要优势" tabindex="-1">PNG格式的主要优势 <a class="header-anchor" href="#png格式的主要优势" aria-label="Permalink to &quot;PNG格式的主要优势&quot;">​</a></h2><p><code>PNG</code>格式是数字图像世界中另一个强大的参与者，其特点使其成为某些应用的突出选择。以下是使用PNG格式的一些主要好处：<br><code>高质量</code>：<code>PNG</code>采用无损压缩算法。这意味着即使在压缩和解压缩后，照片的质量仍然很高。与一些为了更小的尺寸而牺牲质量的格式不同，PNG使图像看起来非常清晰。<br><code>清晰的图形</code>：在创建清晰的图形方面，<code>PNG</code>是真正的赢家。无论你是设计徽标还是大量文本的图形，PNG都将保持边缘清晰，颜色鲜艳。<br><code>创作自由</code>：简陋的<code>PNG</code>是平面设计师最喜欢创建背景效果和叠加。它支持多种颜色和色调，从而提高设计的创造力和精确度。<br><code>透明背景</code>：<code>PNG</code>的突出特点之一是它对透明背景的支持。这对于创建需要分层或放置在不同背景上的图像非常有用。你甚至可以创建一个半透明的水印，所以没有人试图把你的图像当成自己的。</p><p>了解这些好处可以帮助你充分利用<code>PNG</code>格式。无论你是设计徽标还是网站横幅，<code>PNG</code>格式都提供强大的功能，确保你的图像在视觉上令人惊叹。</p><h2 id="如何抉择呢" tabindex="-1">如何抉择呢 <a class="header-anchor" href="#如何抉择呢" aria-label="Permalink to &quot;如何抉择呢&quot;">​</a></h2><p>照片用 <code>JPEG</code>，因为色彩比较丰富也不需要透明，用 <code>JPEG</code> 即有较高的图像质量还能保持较小的文件体积。</p><p>小图片，小图标，有透明需求的用 <code>PNG</code>，尺寸较大的照片如果用 <code>PNG</code> 文件体积会比 <code>JPEG</code> 大不少。</p><p>当然你也可以按自己的需求来选择,希望你看完后对jpg和png有新的理解。</p><p><strong>如果你发现这篇指南有用，或者有改进建议，请随时联系我们或参与讨论。</strong>🎉 🎉 🎉</p>',19))])}const f=c(i,[["render",s]]);export{u as __pageData,f as default};
